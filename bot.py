# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–æ–¥—É–ª—ñ
import asyncio  # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è
import logging  # –î–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø–æ–¥—ñ–π
import sys  # –î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –¥–µ—è–∫–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ–π, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑ —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–æ–º Python

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–æ–≥–æ —Ñ–∞–π–ª—É
from config import BOT_TOKEN as TOKEN

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∫–ª–∞—Å–∏ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –∑ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏ aiogram
from aiogram import Bot, Dispatcher, html
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery, URLInputFile, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –∫–æ–º–∞–Ω–¥–∏, —è–∫—ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –≤ –±–æ—Ç—ñ
from commands import (FILMS_COMMAND, START_COMMAND, FILM_CREATE_COMMAND, BOT_COMMANDS)

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ —Ñ—ñ–ª—å–º–∏
from data import get_films, add_film

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–ª–∞–≤—ñ–∞—Ç—É—Ä —Ç–∞ –æ–±—Ä–æ–±–∫–∏ –∑–≤–æ—Ä–æ—Ç–Ω–∏—Ö –≤–∏–∫–ª–∏–∫—ñ–≤
from keyboards import films_keyboard_markup, FilmCallback

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—å –¥–∞–Ω–∏—Ö –¥–ª—è —Ñ—ñ–ª—å–º—É
from models import Film

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å
dp = Dispatcher()


class FilmForm(StatesGroup):
    name = State()
    description = State()
    rating = State()
    genre = State()
    actors = State()
    poster = State()


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /start
@dp.message(Command("start"))
async def start(message: Message) -> None:
    # –í—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start, –≤—ñ—Ç–∞—é—á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    await message.answer(
        f"Helloüñê, {html.bold(message.from_user.full_name)}!\n"
        "I'm your first Telegram Bot ü•≥"
    )


# –û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥–∏ /films
@dp.message(FILMS_COMMAND)
async def films(message: Message) -> None:
    data = get_films()
    markup = films_keyboard_markup(films_list=data)
    await message.answer(
        f"<b>–°–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤: üéû</b>\n–û–±–µ—Ä—ñ—Ç—å —Ñ—ñ–ª—å–º, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω—å–æ–≥–æ.",
        reply_markup=markup
    )


# –û–±—Ä–æ–±–Ω–∏–∫ –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É –¥–ª—è —Ñ—ñ–ª—å–º—ñ–≤
@dp.callback_query(FilmCallback.filter())
async def callback_film(callback: CallbackQuery, callback_data: FilmCallback) -> None:
    # –û—Ç—Ä–∏–º—É—î–º–æ ID —Ñ—ñ–ª—å–º—É –∑ –¥–∞–Ω–∏—Ö –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É
    film_id = callback_data.id
    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—Ä–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∏–π —Ñ—ñ–ª—å–º –∑–∞ –π–æ–≥–æ ID
    film_data = get_films(film_id=film_id)
    # –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç —Ñ—ñ–ª—å–º—É
    film = Film(**film_data)

    # –§–æ—Ä–º—É—î–º–æ —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–µ—Ç–∞–ª—è–º–∏ –ø—Ä–æ —Ñ—ñ–ª—å–º
    text = f"<b>–§—ñ–ª—å–º:</b> {film.name}\n" \
           f"<b>–û–ø–∏—Å:</b> {film.description}\n" \
           f"<b>–†–µ–π—Ç–∏–Ω–≥:</b> {film.rating}\n" \
           f"<b>–ñ–∞–Ω—Ä:</b> {film.genre}\n" \
           f"<b>–ê–∫—Ç–æ—Ä–∏:</b> {', '.join(film.actors)}\n"

    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ñ–æ—Ç–æ –∑ –ø–æ—Å—Ç–µ—Ä–æ–º —Ñ—ñ–ª—å–º—É —Ç–∞ —Ç–µ–∫—Å—Ç–æ–º –∑ –¥–µ—Ç–∞–ª—è–º–∏
    await callback.message.answer_photo(
        caption=text,
        photo=URLInputFile(
            film.poster,
            filename=f"{film.name}_poster.{film.poster.split('.')[-1]}"
        )
    )


@dp.message(FILM_CREATE_COMMAND)
async def film_create(message: Message, state: FSMContext) -> None:
    await state.set_state(FilmForm.name)
    await message.answer(
        f"<b>–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ—ñ–ª—å–º—É ...</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.name)
async def film_name(message: Message, state: FSMContext) -> None:
    await state.update_data(name=message.text)
    await state.set_state(FilmForm.description)
    await message.answer(
        f"<b>–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å —Ñ—ñ–ª—å–º—É ...</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.description)
async def film_description(message: Message, state: FSMContext) -> None:
    await state.update_data(description=message.text)
    await state.set_state(FilmForm.rating)
    await message.answer(
        f"<b>–í–∫–∞–∂—ñ—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ —Ñ—ñ–ª—å–º—É (–≤—ñ–¥ 0 –¥–æ 10) ...</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.rating)
async def film_rating(message: Message, state: FSMContext) -> None:
    await state.update_data(rating=float(message.text))
    await state.set_state(FilmForm.genre)
    await message.answer(
        f"<b>–í–≤–µ–¥—ñ—Ç—å –∂–∞–Ω—Ä —Ñ—ñ–ª—å–º—É ...</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.genre)
async def film_genre(message: Message, state: FSMContext) -> None:
    await state.update_data(genre=message.text)
    await state.set_state(FilmForm.actors)
    await message.answer(
        text=f"<b>–í–≤–µ–¥—ñ—Ç—å –∞–∫—Ç–æ—Ä—ñ–≤ —Ñ—ñ–ª—å–º—É —á–µ—Ä–µ–∑ `, ` \n‚ö†Ô∏è (–û–±–æ–≤'—è–∑–∫–æ–≤–∞ –∫–æ–º–∞ —Ç–∞ –≤—ñ–¥—Å—Ç—É–ø –ø—ñ—Å–ª—è –Ω–µ—ó)</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.actors)
async def film_actors(message: Message, state: FSMContext) -> None:
    await state.update_data(actors=[x for x in message.text.split(", ")])
    await state.set_state(FilmForm.poster)
    await message.answer(
        f"<b>–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –ø–æ—Å—Ç–µ—Ä —Ñ—ñ–ª—å–º—É ...</b>",
        reply_markup=ReplyKeyboardRemove(),
    )


@dp.message(FilmForm.poster)
async def film_poster(message: Message, state: FSMContext) -> None:
    data = await state.update_data(poster=message.text)
    film = Film(**data)
    add_film(film.model_dump())
    await state.clear()
    await message.answer(
        f"–§—ñ–ª—å–º {film.name} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ ‚úÖ",
        reply_markup=ReplyKeyboardRemove(),
    )


# –ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞
async def main() -> None:
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º —Ç–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∫–æ–º–∞–Ω–¥–∏ –±–æ—Ç–∞
    await bot.set_my_commands(BOT_COMMANDS)
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ü–∏–∫–ª –æ–ø–∏—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω—å
    await dp.start_polling(bot)


# –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É
if __name__ == "__main__":
    # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –±–∞–∑–æ–≤–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π –ø–æ—Ç—ñ–∫ –≤–∏–≤–µ–¥–µ–Ω–Ω—è
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –≥–æ–ª–æ–≤–Ω—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é
    asyncio.run(main())
